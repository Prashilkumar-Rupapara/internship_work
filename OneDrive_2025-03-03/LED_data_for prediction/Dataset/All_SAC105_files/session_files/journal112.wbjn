# encoding: utf-8
# 2024 R2
SetScriptVersion(Version="24.2.133")
system1 = GetSystem(Name="SYS 2")
system1.Delete()
system2 = GetSystem(Name="SYS 1")
system2.Delete()
system3 = GetSystem(Name="SYS")
modelComponent1 = system3.GetComponent(Name="Model")
modelComponent1.Reset()
geometry1 = system3.GetContainer(ComponentName="Geometry")
geometry1.SetFile(FilePath="E:/LED_simulation/Innolot/seoul/FC_SP4.scdoc")
geometry1.Edit(IsSpaceClaimGeometry=True)
geometry1.Exit()
engineeringData1 = system3.GetContainer(ComponentName="Engineering Data")
material1 = engineeringData1.GetMaterial(Name="Copper, C10200, hard")
material1.Delete()
material2 = engineeringData1.GetMaterial(Name="Copper, C10200, soft")
material2.Delete()
material3 = engineeringData1.GetMaterial(Name="SAC")
matlProp1 = material3.GetProperty(Name="Density")
matlProp1.Delete()
matlProp2 = material3.GetProperty(Name="Coefficient of Thermal Expansion")
matlProp2.SetVariableProperty(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Isotropic"},
    VariableName="Coefficient of Thermal Expansion",
    Property="Unit",
    Value="K^-1")
matlProp2.SetData(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Isotropic"},
    Variables=["Coefficient of Thermal Expansion"],
    Values=[["2.1E-05 [K^-1]"]])
matlProp2.SetData(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Isotropic"},
    Variables=["Coefficient of Thermal Expansion"],
    Values=[["2.185E-05 [K^-1]"]])
matlProp3 = material3.GetProperty(Name="Elasticity")
matlProp3.SetData(
    Variables=["Poisson's Ratio"],
    Values=[["0.36"]])
matlProp3.SetData(
    Variables=["Young's Modulus"],
    Values=[["39000 [MPa]"]])
matlProp3.SetVariableProperty(
    VariableName="Young's Modulus",
    Property="Unit",
    Value="Pa")
matlProp3.SetData(
    Variables=["Young's Modulus"],
    Values=[["39000000000 [Pa]"]])
matlProp4 = material3.GetProperty(Name="Viscoplasticity")
matlProp4.SetQualifier(
    Qualifier="Reference Units (Stress, Temperature, Per Time)",
    Value="MPa, K, s^-1")
matlProp4.SetData(
    Variables=["Initial Deformation Resistance So"],
    Values=[["32.02"]])
matlProp4.SetData(
    Variables=["Initial Deformation Resistance So"],
    Values=[["32.42"]])
matlProp4.SetData(
    Variables=["Activation Energy Q/Universal Gas Constant R"],
    Values=[["12441"]])
matlProp4.SetData(
    Variables=["Pre-exponential Factor A"],
    Values=[["25000"]])
matlProp4.SetData(
    Variables=["Multiplier of Stress ξ"],
    Values=[["7"]])
matlProp4.SetData(
    Variables=["Strain Rate Sensitivity of Stress m"],
    Values=[["0.35"]])
matlProp4.SetData(
    Variables=["Hardening/Softening Constant ho"],
    Values=[["88875"]])
matlProp4.SetData(
    Variables=["Coefficient for Deformation Resistance Saturation Ŝ"],
    Values=[["56.76"]])
matlProp4.SetData(
    Variables=["Strain Rate Sensitivity of Saturation (Deformation Resistance) n"],
    Values=[["0.0097"]])
matlProp4.SetData(
    Variables=["Strain Rate Sensitivity of Hardening or Softening a"],
    Values=[["1.45"]])
Save(Overwrite=True)
matl1 = engineeringData1.CreateMaterial(Name="GaN")
matl1.Delete()
material4 = engineeringData1.GetMaterial(Name="Cermaic_substrate(ALN)")
matl2 = material4.Duplicate(TargetContainer=engineeringData1)
matl2.DisplayName = "GaN"
material5 = engineeringData1.GetMaterial(Name="CopperFoil")
matlProp5 = material5.GetProperty(Name="Density")
matlProp5.Delete()
matlProp6 = matl2.GetProperty(Name="Elasticity")
matlProp6.SetData(
    Variables=["Poisson's Ratio"],
    Values=[["0.352"]])
matlProp6.SetData(
    Variables=["Young's Modulus"],
    Values=[["181000 [Pa]"]])
matlProp6.SetVariableProperty(
    VariableName="Young's Modulus",
    Property="Unit",
    Value="MPa")
matlProp6.SetData(
    Variables=["Young's Modulus"],
    Values=[["0.181 [MPa]"]])
matlProp6.SetData(
    Variables=["Young's Modulus"],
    Values=[["181000 [MPa]"]])
matlProp6.SetVariableProperty(
    VariableName="Young's Modulus",
    Property="Unit",
    Value="Pa")
matlProp6.SetData(
    Variables=["Young's Modulus"],
    Values=[["181000000000 [Pa]"]])
matlProp7 = matl2.GetProperty(Name="Coefficient of Thermal Expansion")
matlProp7.SetData(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Isotropic"},
    Variables=["Coefficient of Thermal Expansion"],
    Values=[["5.6E-06 [K^-1]"]])
matlProp7.SetVariableProperty(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Isotropic"},
    VariableName="Coefficient of Thermal Expansion",
    Property="Unit",
    Value="C^-1")
matlProp7.SetData(
    SheetName="Coefficient of Thermal Expansion",
    SheetQualifiers={"Definition": "Secant", "Behavior": "Isotropic"},
    Variables=["Coefficient of Thermal Expansion"],
    Values=[["5.6E-06 [C^-1]"]])
Save(Overwrite=True)
system3.DisplayText = "Seoul_Innolot"
system3.DisplayText = "Seoul_Innolot(SAC387+BiInSbNi)"
system3.DisplayText = "Seoul_Innolot(SAC387+BiSbNi)"
engineeringDataComponent1 = system3.GetComponent(Name="Engineering Data")
engineeringDataComponent1.Update(AllDependencies=True)
geometryComponent1 = system3.GetComponent(Name="Geometry")
geometryComponent1.Update(AllDependencies=True)
modelComponent1.Refresh()
model1 = system3.GetContainer(ComponentName="Model")
model1.Edit()
Save(Overwrite=True)
Save(Overwrite=True)
model1.Exit()
Save(Overwrite=True)

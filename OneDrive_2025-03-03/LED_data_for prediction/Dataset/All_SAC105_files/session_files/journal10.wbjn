# encoding: utf-8
# 2019 R3
SetScriptVersion(Version="19.5.112")
EngData.EnableFilter(Enable=False)
EngData.EnableFilter()
EngData.EnableFilter(Enable=False)
system1 = GetSystem(Name="SYS")
engineeringData1 = system1.GetContainer(ComponentName="Engineering Data")
material1 = engineeringData1.GetMaterial(Name="SAC")
matl1 = material1.Duplicate(TargetContainer=engineeringData1)
matl1.DisplayName = "SAC Creep"
matlProp1 = matl1.CreateProperty(
    Name="Coefficient of Thermal Expansion",
    Definition="Secant",
    Behavior="Isotropic",
    Qualifiers={"Definition": "Secant", "Behavior": "Isotropic"})
matlProp2 = matl1.CreateProperty(
    Name="Generalized Garofalo",
    Qualifiers={"Definition": "", "Behavior": ""})
matlProp2.SetData(
    Index=-1,
    Variables=["Creep Constant 1"],
    Values=[["1.04"]])
matlProp2.SetData(
    Variables=["Creep Constant 2"],
    Values=[["0.46"]])
matlProp2.SetData(
    Variables=["Creep Constant 3"],
    Values=[["0.045"]])
matlProp2.SetData(
    Variables=["Creep Constant 4"],
    Values=[["3360"]])
matlProp1.Delete(
    Definition="Secant",
    Behavior="Isotropic")
matlProp3 = matl1.GetProperty(Name="Elasticity")
matlProp3.SetData(
    SheetName="Elasticity",
    SheetQualifiers={"Definition": "", "Behavior": "Isotropic", "Derive from": "Young's Modulus and Poisson's Ratio"},
    Variables=["Temperature"],
    Values=[["-55.15 [C]"]])
matlProp3.BeginBatchUpdate()
matlProp3.SetVariableProperty(
    SheetName="Elasticity",
    SheetQualifiers={"Definition": "", "Behavior": "Isotropic", "Derive from": "Young's Modulus and Poisson's Ratio"},
    VariableName="Young's Modulus",
    Property="Unit",
    Value="Pa")
matlProp3.SetData(
    SheetName="Elasticity",
    SheetQualifiers={"Definition": "", "Behavior": "Isotropic", "Derive from": "Young's Modulus and Poisson's Ratio"},
    Variables=["Young's Modulus"],
    Values=[["35250000000 [Pa]"]])
matlProp3.EndBatchUpdate()
matlProp3.SetData(
    SheetName="Elasticity",
    SheetQualifiers={"Definition": "", "Behavior": "Isotropic", "Derive from": "Young's Modulus and Poisson's Ratio"},
    Variables=["Young's Modulus"],
    Values=[["48500000000 [Pa]"]])
matlProp3.SetData(
    SheetName="Elasticity",
    SheetQualifiers={"Definition": "", "Behavior": "Isotropic", "Derive from": "Young's Modulus and Poisson's Ratio"},
    Variables=["Poisson's Ratio"],
    Values=[["0.36"]])
matlProp3.SetData(
    SheetName="Elasticity",
    SheetQualifiers={"Definition": "", "Behavior": "Isotropic", "Derive from": "Young's Modulus and Poisson's Ratio"},
    Index=-1,
    Variables=["Temperature"],
    Values=[["209.85 [C]"]])
matlProp3.SetData(
    SheetName="Elasticity",
    SheetQualifiers={"Definition": "", "Behavior": "Isotropic", "Derive from": "Young's Modulus and Poisson's Ratio"},
    Index=1,
    Variables=["Young's Modulus"],
    Values=[["33000000000 [Pa]"]])
matlProp3.SetData(
    SheetName="Elasticity",
    SheetQualifiers={"Definition": "", "Behavior": "Isotropic", "Derive from": "Young's Modulus and Poisson's Ratio"},
    Index=1,
    Variables=["Poisson's Ratio"],
    Values=[["0.36"]])
matlProp4 = matl1.GetProperty(Name="Density")
matlProp4.SetVariableProperty(
    VariableName="Density",
    Property="Unit",
    Value="kg m^-3")
matlProp4.SetData(
    Variables=["Density"],
    Values=[["7389.9999999999991 [kg m^-3]"]])
matlProp4.SetData(
    Variables=["Density"],
    Values=[["2700 [kg m^-3]"]])
Save(Overwrite=True)
